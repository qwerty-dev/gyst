%section.user_info.row
    .container-profile.col-lg-3.col-m-3
        .profile-box
            .profile-cover-image
                %img{src: "/imgs/lego_faces/#{@user.picture}.jpg", class: "img-responsive"} 
    .profile-details.col-lg-9.col-m-9
        #user-profile
            - if you
                .row
                    %ul.nav.nav-tabs.col-md-12
                        %li.usr-profile.active
                            %a{href: "#profile-info", data: {toggle: "tab"}} Profile
                            %li.usr-circles
                                %a{href: "#profile-circles", data: {toggle: "tab"}} Circles
                            %li.usr-tasks
                                %a{href: "#profile-tasks", data: {toggle: "tab"}} Tasks
                            %li.usr-edit-profile
                                %a{href: "#profile-edit", data: {toggle: "tab"}} Edit Profile

                .row
                    #profile.tab-content.col-md-12
                        #profile-info.tab-pane.active-in.active
                            = haml :_user_profile, layout: false
                        #profile-edit.tab-pane.fade 
                            = haml :edit_user, layout: false
                        #profile-circles.tab-pane.fade
                            = haml :_user_circles, layout: false
                        #profile-tasks.tab-pane.fade
                            = haml :_user_tasks, layout: false
- if is_logged_in?
    - if logged_in_user.circles.empty? 
        = "no tasks not even shared ;("
    - else
        %h1.text-center
            = "#{Time.now.day}th of #{Date::MONTHNAMES[Date.today.month]} timeline"
        #timeline.container
            - i = 0 #left/right logic
            - tasks = []
            -logged_in_user.circles.each do | circle | 
                - circle.tasks.all.each do |task| 
                    -if task.due >= Time.zone.now && task.due <= (Time.zone.now  + (24*60)*60) #today's tasks
                        - tasks << task
            -tasks.sort! { | x,y | y.due<=> x.due}
            -tasks.each do |task| 
                - i += 1
                .task-timeline{class: "#{i%2 == 0 ? 'right' : 'left'} #{(task_due task) ? 'remind' : " "}"}
                    = "#{(User.find_by_id task.user_id).name} has to #{task.name}"
                    - date = task.due
                    - if !date.nil?
                        %span.date-timeline
                            = (date.in_time_zone logged_in_user.timezone).strftime("today at %l :%M %P")